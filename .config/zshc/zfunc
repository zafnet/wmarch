#-- PROMPT CUSTOM CON PROMPT_SUBST OPCION DE ZSH
git_b() { git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ *\1/' }

#-- VER LOS MANUALES DE MAN EN NVIM
# man() { /usr/bin/man $* | nvim -c "set ft=man" -R -}

#-- FUNCIONES PARA FZF
ir() {cd $(find / -type d 2> /dev/null | fzf -e --border --cycle --prompt="Ir a La Carpeta: ") && zle reset-prompt} ;zle -N ir;bindkey "^[i" ir

op() {xdg-open $(find / -type f 2> /dev/null | fzf -e --border --cycle --prompt="Abrir: ") && zle reset-prompt} ;zle -N op;bindkey "^[o" op

rf() {rm -rf $(find / -type f,d 2> /dev/null | fzf -m -e --border --cycle --prompt="Borrar Archivo o Directorio: ") && zle reset-prompt} ;zle -N rf;bindkey  "^[r" rf

nf() {sh -c 'find / -type f 2> /dev/null | fzf -m -e --border --cycle --prompt="Abrir Con Nvim: "| xargs -r nvim' && zle reset-prompt} ;zle -N nf;bindkey 'đ' nf

ve() {find / -type f 2> /dev/null | fzf -m -e --border --cycle --prompt="Vista Previa De: "| xargs -r bat && zle reset-prompt} ;zle -N ve;bindkey "^[v" ve

li() {find / -type d 2> /dev/null | fzf -m -e --border --cycle --prompt="Listar Una Carpeta: "| xargs -r lsd -la && zle reset-prompt} ;zle -N li;bindkey "^[l" li

cr() {find / -type f,d 2>/dev/null | fzf -e --border --cycle --prompt="Copiar Ruta: " | tr -d '\n' | xclip -selection c && zle reset-prompt} ;zle -N cr;bindkey  "¢" cr

cl() {find / -type f 2>/dev/null | fzf -e --border --cycle --prompt="Copiar en clipboard: " |tr -d '\n' | xargs xclip -sel clipboard && zle reset-prompt} ;zle -N cl ;bindkey "^[c" cl

hi() {
    local selected=$({ ([ -n "$ZSH_NAME" ] && history 0) | sed 's/^ *[0-9][0-9]*  *//g'; echo "";} | fzf +s --tac -e --border --cycle --prompt="Historial: ")
    BUFFER=$selected
    zle redisplay
} ;zle -N hi ;bindkey '^r' hi

fk() { pid=$(ps -ef | sed 1d | fzf -m --color --height 60%  --prompt="Eliminar proceso ➤ " --pointer="➤ " --marker="➤ " | awk '{print $2}')
if [ "x$pid" != "x" ]; then 
kill -${1:-9} $pid 
fi && zle reset-prompt} ;zle -N fk; bindkey "^[k" fk

#-- FUNCION PARA EXTRAER COMPRIMIDO
ex() {
[ $# -eq 0 ] && echo "no se paso un archivo a la funcion" && return 2
	for file in $*; do
		if [ -f $file ] ; then
			case $file in
				*.tar.bz2)   tar xvjf $file    ;;
				*.tar.gz)    tar xvzf $file    ;;
				*.bz2)       bunzip2 $file     ;;
				*.rar)       rar x $file       ;;
				*.gz)        gunzip $file      ;;
				*.tar)       tar xvf $file     ;;
				*.tbz2)      tar xvjf $file    ;;
				*.tgz)       tar xvzf $file    ;;
				*.zip)       unzip $file       ;;
				*.Z)         uncompress $file  ;;
				*.7z)        7z x $file        ;;
				*)           echo "NO SE COMO EXTRAER '$file'..." ;;
			esac
		else
			echo "'$file' NO ES UN ARCHIVO VALIDO!"
		fi
	done
}

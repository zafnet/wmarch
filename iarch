#!/usr/bin/env bash

if [ "$(id -u)" -eq  "0" ]; then

if ping -c 1 www.google.com &> /dev/null; then

echo " ██████╗ ██████╗ ███╗   ██╗███████╗██╗  ██╗██╗ ██████╗ ███╗   ██╗";
echo "██╔════╝██╔═══██╗████╗  ██║██╔════╝╚██╗██╔╝██║██╔═══██╗████╗  ██║";
echo "██║     ██║   ██║██╔██╗ ██║█████╗   ╚███╔╝ ██║██║   ██║██╔██╗ ██║";
echo "██║     ██║   ██║██║╚██╗██║██╔══╝   ██╔██╗ ██║██║   ██║██║╚██╗██║";
echo "╚██████╗╚██████╔╝██║ ╚████║███████╗██╔╝ ██╗██║╚██████╔╝██║ ╚████║";
echo " ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝╚══════╝╚═╝  ╚═╝╚═╝ ╚═════╝ ╚═╝  ╚═══╝";
echo "███████╗██╗  ██╗██╗████████╗ ██████╗ ███████╗ █████╗ ";
echo "██╔════╝╚██╗██╔╝██║╚══██╔══╝██╔═══██╗██╔════╝██╔══██╗";
echo "█████╗   ╚███╔╝ ██║   ██║   ██║   ██║███████╗███████║";
echo "██╔══╝   ██╔██╗ ██║   ██║   ██║   ██║╚════██║██╔══██║";
echo "███████╗██╔╝ ██╗██║   ██║   ╚██████╔╝███████║██║  ██║";
echo "╚══════╝╚═╝  ╚═╝╚═╝   ╚═╝    ╚═════╝ ╚══════╝╚═╝  ╚═╝";

echo -e '\033[1;95m' "\n\t\t\t\t -- ACTUALIZANDO SISTEMA DE ISO --"
sleep 2
clear

else
echo "██╗      █████╗      ██████╗ ██████╗ ███╗   ██╗███████╗██╗  ██╗██╗ ██████╗ ███╗   ██╗";
echo "██║     ██╔══██╗    ██╔════╝██╔═══██╗████╗  ██║██╔════╝╚██╗██╔╝██║██╔═══██╗████╗  ██║";
echo "██║     ███████║    ██║     ██║   ██║██╔██╗ ██║█████╗   ╚███╔╝ ██║██║   ██║██╔██╗ ██║";
echo "██║     ██╔══██║    ██║     ██║   ██║██║╚██╗██║██╔══╝   ██╔██╗ ██║██║   ██║██║╚██╗██║";
echo "███████╗██║  ██║    ╚██████╗╚██████╔╝██║ ╚████║███████╗██╔╝ ██╗██║╚██████╔╝██║ ╚████║";
echo "╚══════╝╚═╝  ╚═╝     ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝╚══════╝╚═╝  ╚═╝╚═╝ ╚═════╝ ╚═╝  ╚═══╝";
echo "                                                                                     ";
echo "███████╗ █████╗ ██╗     ██╗      ██████╗ ";
echo "██╔════╝██╔══██╗██║     ██║     ██╔═══██╗";
echo "█████╗  ███████║██║     ██║     ██║   ██║";
echo "██╔══╝  ██╔══██║██║     ██║     ██║   ██║";
echo "██║     ██║  ██║███████╗███████╗╚██████╔╝";
echo "╚═╝     ╚═╝  ╚═╝╚══════╝╚══════╝ ╚═════╝ ";
echo "                                         ";
sleep 2
clear
fi

else

echo  "  ███╗░░██╗░█████╗░  ██████╗░░█████╗░░█████╗░████████╗"
echo  "  ████╗░██║██╔══██╗  ██╔══██╗██╔══██╗██╔══██╗╚══██╔══╝"
echo  "  ██╔██╗██║██║░░██║  ██████╔╝██║░░██║██║░░██║░░░██║░░░"
echo  "  ██║╚████║██║░░██║  ██╔══██╗██║░░██║██║░░██║░░░██║░░░"
echo  "  ██║░╚███║╚█████╔╝  ██║░░██║╚█████╔╝╚█████╔╝░░░██║░░░"
echo  "  ╚═╝░░╚══╝░╚════╝░  ╚═╝░░╚═╝░╚════╝░░╚════╝░░░░╚═╝░░░"
exit

fi


clear

idioma="es_AR.UTF8"
clear
echo "$idioma UTF-8" > /etc/locale.gen
locale-gen
echo "LANG=$idioma" > /etc/locale.conf
exportlang=$(echo "LANG=$idioma")
export $exportlang
locale-gen
echo ""
clear

#Disco

discosdisponibles=$(echo "print devices" | parted | grep /dev/ | awk '{if (NR!=1) {print}}' | sed '/sr/d')
clear
printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' _
echo ""
echo "Rutas de Disco disponible: "
echo ""
echo $discosdisponibles
echo ""
printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' _


echo -e '\033[1;95m' "\n\t\t\t\t INGRESAR DISCO Y DATOS DE USUARIO"
echo ""
read -p "Introduce tu disco a instalar Arch: " disco
echo ""
read -p "Introduce Nombre usuario Nuevo: " user
echo ""
read -s -p "Introduce la clave de $user: " userpasswd
echo ""
read -s -p "Introduce la clave de Root/Administrador: " rootpasswd
echo ""

echo -e '\033[1;95m' "\n\t\t\t\t  ESCRITORIOS"
printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' _
echo ""
echo "Ingresa una opción marcando el numero correcto:"
echo ""
echo "1. Terminal Virtual (TTY)"
echo "2. bspwm"
echo "4. Xfce4"
echo "4. Kde Plasma"
echo "5. Gnome 40"
echo "6. I3"
echo ""
read -p "Introduce la opción de Escritorio: " escritorio
echo ""

echo -e '\033[1;95m' "\n\t\t\t\t MOSTRAR DATOS GUARDADOS "
clear
printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' _
echo ''
echo "Selección de Disco: $disco"
echo ''
echo "Tu usuario: $user"
echo ''
# echo "Clave de usuario: $userpasswd"
# echo ''
# echo "Clave de Administrador: $rootpasswd"
# echo ''

#echo ""
printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' _
#echo ""
echo ""
echo "Para confirmar e instalar Arch Linux"
echo ""
echo "Presione ENTER o para salir presione CTRL + C"
read line

echo -e '\033[1;95m' "\n\t\t\t\t -- DETECTANDO SI TENEMOS UEFI O BIOS LEGACY --"

uefi=$( ls /sys/firmware/efi/ | grep -ic efivars )

if [ $uefi == 1 ]
then
	clear
	printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' _
	echo ""
	echo "Tu Sistema es UEFI"
	echo ""
	date "+%F %H:%M"
	sleep 3
	#Fuente: https://wiki.archlinux.org/index.php/GPT_fdisk

    #-- METODO DE DISCO "EFI" CON PARTICIONES -EFI-HOME-ROOT YO LO USO ACTUALMENTE PARA EFI-ROOT

	(echo Ignore) | sgdisk --zap-all ${disco}
	parted ${disco} mklabel gpt
	(echo 2; echo w; echo Y) | gdisk ${disco}
	sgdisk ${disco} -n=1:0:+512M -t=1:ef00
	#sgdisk ${disco} -n=2:0:+20G -t=2:8302 comentar o borrar el de home que es este para tener root y efi numero para root poner 8304 donde va t=
    sgdisk ${disco} -n=2:0:0:8304
	fdisk -l ${disco} > /tmp/partition
	echo ""
	cat /tmp/partition
	sleep 3

	partition="$(cat /tmp/partition | grep /dev/ | awk '{if (NR!=1) {print}}' | sed 's/*//g' | awk -F ' ' '{print $1}')"

	echo $partition | awk -F ' ' '{print $1}' >  boot-efi
	#echo $partition | awk -F ' ' '{print $2}' >  home-efi
	echo $partition | awk -F ' ' '{print $2}' >  root-efi

#ACA ARRIBA HAY QUE CAMBIAR EL {print$3} POR {print$2} root-efi POR QUE ARRIBA PUSE -n=2:0:0:8304

	clear
	printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' _
	echo ""
	echo "Partición EFI es:"
	cat boot-efi
	echo ""
	#echo "Partición home es:"
	#cat home-efi
	echo ""
	echo "Partición ROOT es:"
	cat root-efi
	sleep 3

	clear
	echo ""
	echo "Formateando Particiones"
	echo ""

    mkfs.ext4 $(cat root-efi)
	mount $(cat root-efi) /mnt

	mkdir -p /mnt/efi
	mkfs.fat -F 32 $(cat boot-efi)
	mount $(cat boot-efi) /mnt/efi

    #mkdir -p /mnt/home
	#mkfs.ext4 $(cat home-efi)
	#mount $(cat home-efi) /mnt/home

	rm boot-efi
	#rm home-efi
	rm root-efi

	clear
	#echo ""
	#echo "Revise en punto de montaje en MOUNTPOINT - PRESIONE ENTER"
	#echo ""
	lsblk -l
	#read line

else
	clear
	printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' _
	echo ""
	echo "Tu Sistema es BIOS"
	echo ""
	date "+%F %H:%M"
	sleep 3

	#-- METODO DE DISCO "BIOS" CON PARTICIONES -BOOT-ROOT-HOME
	#+100M 			particion boot
	#               particion home
    #+100%			particion root
	#				Cambien valores si desean

	sgdisk --zap-all ${disco}
	(echo o; echo n; echo p; echo 1; echo ""; echo +512M; echo n; echo p; echo 2; echo ""; echo +20G; echo n; echo p; echo 3; echo ""; echo ""; echo t; echo 2; echo 82; echo a; echo 1; echo w; echo q) | fdisk ${disco}
	fdisk -l ${disco} > /tmp/partition
	cat /tmp/partition
	sleep 3

	partition="$(cat /tmp/partition | grep /dev/ | awk '{if (NR!=1) {print}}' | sed 's/*//g' | awk -F ' ' '{print $1}')"

	echo $partition | awk -F ' ' '{print $1}' >  boot-bios
	echo $partition | awk -F ' ' '{print $2}' >  swap-bios
	echo $partition | awk -F ' ' '{print $3}' >  root-bios

	clear
	printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' _
	echo ""
	echo "Partición BOOT es:" 
	cat boot-bios
	echo ""
	echo "Partición SWAP es:"
	cat swap-bios
	echo ""
	echo "Partición ROOT es:"
	cat root-bios
	sleep 3

	clear
	echo ""
	echo "Formateando Particiones"
	echo ""
	mkfs.ext4 $(cat root-bios) 
	mount $(cat root-bios) /mnt 

	mkdir -p /mnt/boot
	mkfs.ext4 $(cat boot-bios) 
	mount $(cat boot-bios) /mnt/boot

	mkswap $(cat swap-bios) 
	swapon $(cat swap-bios)

	clear
	echo ""
	echo "Revise en punto de montaje en MOUNTPOINT"
	echo ""
	lsblk -l
	sleep 4
	clear
	
fi

echo -e '\033[0;33m' "\n\t\t\t  ACTUALIZACION DE LLAVES DEL LIVE CD"
clear
pacman -Syy
pacman -Sy archlinux-keyring reflector python rsync glibc curl --noconfirm 
clear
sleep 3
clear
echo ""
echo -e '\033[0;33m' "\n\t\t\t MIRRORLIST MAS RAPIDOS PARA EL LIVE CD"
echo ""
reflector --verbose --latest 5 --protocol http --protocol https --sort rate --save /etc/pacman.d/mirrorlist
clear
cat /etc/pacman.d/mirrorlist
sleep 3
clear


# Instalando Sistema base en nuestro Disco
echo ""
echo -e '\033[1;92m' "\n\t\t\t INSTALANDO SISTEMA BASE EN NUESTRO DISCO"
echo ""
pacstrap /mnt base base-devel nano reflector python rsync curl wget zsh neovim git neofetch
clear


# Creando Archiv FSTAB para detectar al iniciar el sistema
echo ""
echo -e '\033[1;92m' "\n\t\t\t CREANDO ARCHIVO FSTAB"
echo ""
echo ""
genfstab -p /mnt >> /mnt/etc/fstab
cat /mnt/etc/fstab
sleep 4
clear


# Configurando pacman para que tenga colores con el repo de MultiLib
echo -e '\033[1;92m' "\n\t\t\t ILOVECANDY Y REPO MULTILIB EN PACMAN.CONF"

sed -i 's/#Color/Color/g' /mnt/etc/pacman.conf
sed -i 's/#TotalDownload/TotalDownload/g' /mnt/etc/pacman.conf
sed -i 's/#VerbosePkgLists/VerbosePkgLists/g' /mnt/etc/pacman.conf
sed -i "37i ILoveCandy" /mnt/etc/pacman.conf
sed -i 's/#\[multilib\]/\[multilib\]/g' /mnt/etc/pacman.conf
sed -i "s/#Include = \/etc\/pacman.d\/mirrorlist/Include = \/etc\/pacman.d\/mirrorlist/g" /mnt/etc/pacman.conf
clear


#Hosts y Nombre de computador
echo -e '\033[1;92m' "\n\t\t\t  HOSTS Y NOMBRE DE COMPUTADOR"
#read -p "Elija El Nombre De Hostname: " hos
hos=lenox
echo "$hos" > /mnt/etc/hostname
echo "127.0.1.1 $hos.localdomain $hos" > /mnt/etc/hosts
clear
echo "Hostname: $(cat /mnt/etc/hostname)"
echo ""
echo "Hosts: $(cat /mnt/etc/hosts)"
echo ""
sleep 2
clear


# Agregando usuario y claves con administrador
echo -e '\033[1;92m' "\n\t\t\t CREANDO USUARIO, ROOT Y SUS PASSWORDS"
arch-chroot /mnt /bin/bash -c "(echo $rootpasswd ; echo $rootpasswd) | passwd root"
arch-chroot /mnt /bin/bash -c "useradd -m -g users -s /bin/bash $user"
arch-chroot /mnt /bin/bash -c "(echo $userpasswd ; echo $userpasswd) | passwd $user"
sed -i "80i $user ALL=(ALL) ALL"  /mnt/etc/sudoers
clear


# Idioma del sistema
echo -e '\033[1;92m' "\n\t\t\t IDIOMA DEL SISTEMA "

printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' _
echo -e ""
echo "$idioma UTF-8" > /mnt/etc/locale.gen
arch-chroot /mnt /bin/bash -c "locale-gen"
echo "LANG=$idioma" > /mnt/etc/locale.conf
echo ""
cat /mnt/etc/locale.conf
echo ""
cat /mnt/etc/locale.gen
arch-chroot /mnt /bin/bash -c "export $(cat /mnt/etc/locale.conf)"
exportlang=$(echo "LANG=$idioma")
export $exportlang
export LANG=$idioma
locale-gen
arch-chroot /mnt /bin/bash -c "locale-gen"
clear
sleep 2


# Zona horaria Automatica
echo -e '\033[1;92m' "\n\t\t\t ZONA HORARIA AUTOMATICA"
zonahoraria="America/Argentina/Buenos_Aires"
arch-chroot /mnt /bin/bash -c "ln -sf /usr/share/zoneinfo/$zonahoraria /etc/localtime"
arch-chroot /mnt /bin/bash -c "timedatectl set-timezone $zonahoraria"
arch-chroot /mnt /bin/bash -c "pacman -S ntp --needed --noconfirm"
arch-chroot /mnt /bin/bash -c "ntpd -qg"
arch-chroot /mnt /bin/bash -c "hwclock --systohc"
clear


# Establecer un mapa de teclado para la terminal virtual
echo -e '\033[1;92m' "\n\t\t\t MAPA DE TECLADO PARA LA TERMINAL VIRTUAL"
keymap="es"
echo "KEYMAP=$keymap" > /mnt/etc/vconsole.conf
cat /mnt/etc/vconsole.conf
sleep 2
clear

# Actualiza lista de mirrors en tu disco
echo -e '\033[1;92m' "\n\t\t\t ACTUALIZANDO LISTA DE MIRRORS EN TU DISCO"
echo ""
arch-chroot /mnt /bin/bash -c "reflector --verbose --latest 5 --protocol http --protocol https --sort rate --save /etc/pacman.d/mirrorlist"
clear
cat /mnt/etc/pacman.d/mirrorlist
sleep 3
clear


# Instalación del kernel stable
echo -e '\033[1;92m' "\n\t\t\t INSTALACION DEL KERNEL ESTABLE"
arch-chroot /mnt /bin/bash -c "pacman -S linux-firmware linux linux-headers mkinitcpio --noconfirm"
clear


# Instalación de GRUB - Arranque
echo -e '\033[1;92m' "\n\t\t\t INSTALACION DE ARRANQUE GRUB"
if [ $uefi == 1 ]
then

clear
arch-chroot /mnt /bin/bash -c "pacman -S grub efibootmgr dosfstools --noconfirm"
#arch-chroot /mnt /bin/bash -c "pacman -S grub efibootmgr os-prober dosfstools --noconfirm"
echo '' 
echo 'Instalando EFI System >> bootx64.efi' 
arch-chroot /mnt /bin/bash -c 'grub-install --target=x86_64-efi --efi-directory=/efi --removable' 
echo '' 
echo 'Instalando UEFI System >> grubx64.efi' 
arch-chroot /mnt /bin/bash -c 'grub-install --target=x86_64-efi --efi-directory=/efi --bootloader-id=Arch'

sed -i "6iGRUB_CMDLINE_LINUX_DEFAULT="loglevel=3"" /mnt/etc/default/grub
sed -i '7d' /mnt/etc/default/grub

echo ''
arch-chroot /mnt /bin/bash -c "grub-mkconfig -o /boot/grub/grub.cfg"
echo '' 
#echo 'ls -l /mnt/efi' 
ls -l /mnt/efi 
echo '' 
sleep 4
else

clear
arch-chroot /mnt /bin/bash -c "pacman -S grub --noconfirm"
#arch-chroot /mnt /bin/bash -c "pacman -S grub os-prober --noconfirm"
echo '' 
arch-chroot /mnt /bin/bash -c "grub-install --target=i386-pc $disco"

sed -i "6iGRUB_CMDLINE_LINUX_DEFAULT="loglevel=3"" /mnt/etc/default/grub
sed -i '7d' /mnt/etc/default/grub

echo ''
arch-chroot /mnt /bin/bash -c "grub-mkconfig -o /boot/grub/grub.cfg"
echo '' 
#echo 'ls -l /mnt/boot' 
ls -l /mnt/boot 
echo '' 
fi

clear

# Ethernet
echo -e '\033[1;92m' "\n\t\t\t INSTALANDO PROGRAMAS PARA ETHERNET"
arch-chroot /mnt /bin/bash -c "pacman -S dhcpcd networkmanager net-tools ifplugd --noconfirm"
#arch-chroot /mnt /bin/bash -c "pacman -S dhcpcd networkmanager iwd net-tools ifplugd --noconfirm"
arch-chroot /mnt /bin/bash -c "systemctl enable dhcpcd NetworkManager"
echo "noipv6rs" >> /mnt/etc/dhcpcd.conf
echo "noipv6" >> /mnt/etc/dhcpcd.conf
clear

# Wifi
#echo -e '\033[1;92m' "\n\t\t\t INSTALANDO PROGRAMAS PARA WIFI"
#arch-chroot /mnt /bin/bash -c "pacman -S iw wireless_tools wpa_supplicant dialog wireless-regdb --noconfirm"

# Bluutuuu
#echo -e '\033[1;92m' "\n\t\t\t INSTALANDO PROGRAMAS PARA BLUETOOTH"
#arch-chroot /mnt /bin/bash -c "pacman -S bluez bluez-utils pulseaudio-bluetooth"

# Shell del sistema
echo -e '\033[1;92m' "\n\t\t\t SHELL ZSH PARA USUARIO Y ROOT"
SH=zsh
arch-chroot /mnt /bin/bash -c "chsh -s /bin/$SH"
arch-chroot /mnt /bin/bash -c "chsh -s /usr/bin/$SH $user"
arch-chroot /mnt /bin/bash -c "chsh -s /bin/$SH $user"
clear

# Driver de Vídeo automatico solo driver Libres
echo -e '\033[1;95m' "\n\t\t\t DRIVER DE VIDEO AUTOMATICO SOLO DRIVER LIBRES"

echo -e '\033[0;36m' "\n\t\t\t INSTALANDO DRIVER DE VIDEO NVIDIA"
if (lspci | grep VGA | grep "NVIDIA\|nVidia" &>/dev/null); then
#Nvidia
arch-chroot /mnt /bin/bash -c "pacman -S xf86-video-nouveau mesa lib32-mesa mesa-vdpau libva-mesa-driver lib32-mesa-vdpau lib32-libva-mesa-driver libva-vdpau-driver libvdpau-va-gl libva-utils vdpauinfo libvdpau lib32-libvdpau opencl-mesa clinfo ocl-icd lib32-ocl-icd opencl-headers --noconfirm"

echo -e '\033[0;36m' "\n\t\t\t INSTALANDO DRIVER DE VIDEO RADEON"
elif (lspci | grep VGA | grep "Radeon R\|R2/R3/R4/R5" &>/dev/null); then
# Radeon  
arch-chroot /mnt /bin/bash -c "pacman -S xf86-video-amdgpu mesa lib32-mesa vulkan-radeon lib32-vulkan-radeon mesa-vdpau libva-mesa-driver lib32-mesa-vdpau lib32-libva-mesa-driver libva-vdpau-driver libvdpau-va-gl libva-utils vdpauinfo opencl-mesa clinfo ocl-icd lib32-ocl-icd opencl-headers --noconfirm"

echo -e '\033[0;36m' "\n\t\t\t INSTALANDO DRIVER DE VIDEO ATI"
elif (lspci | grep VGA | grep "ATI\|AMD/ATI" &>/dev/null); then
# ATI             
arch-chroot /mnt /bin/bash -c "pacman -S xf86-video-ati mesa lib32-mesa mesa-vdpau libva-mesa-driver lib32-mesa-vdpau lib32-libva-mesa-driver libva-vdpau-driver libvdpau-va-gl libva-utils vdpauinfo opencl-mesa clinfo ocl-icd lib32-ocl-icd opencl-headers --noconfirm"

elif (lspci | grep VGA | grep "Intel" &>/dev/null); then
# Intel       
echo -e '\033[0;36m' "\n\t\t\t INSTALANDO DRIVER DE VIDEO INTEL"
arch-chroot /mnt /bin/bash -c "pacman -S xf86-video-intel vulkan-intel mesa lib32-mesa intel-media-driver libva-intel-driver libva-vdpau-driver libvdpau-va-gl libva-utils vdpauinfo intel-compute-runtime beignet clinfo ocl-icd lib32-ocl-icd opencl-headers --noconfirm"
    
else
# Generico   
echo -e '\033[0;36m' "\n\t\t\t INSTALANDO DRIVER DE VIDEO GENERICO"
arch-chroot /mnt /bin/bash -c "pacman -S xf86-video-vesa xf86-video-fbdev mesa mesa-libgl lib32-mesa --noconfirm"

fi
clear

echo -e '\033[1;95m' "\n\t\t\t ESCRITORIO SELECCIONADO"

case $escritorio in
  1)
    echo "Escritorio : Terminal Virtual (TTY)"

    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO LSD"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed lsd --noconfirm"
    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO XORG"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed xorg xorg-apps xorg-xinit xorg-twm xterm xorg-xclock --noconfirm"
    echo -e '\033[1;97m' "\n\t\t\t INSTALANDO ZSH"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed zsh --noconfirm"   
    echo -e '\033[1;97m' "\n\t\t\t INSTALANDO COMPLEMENTO DE ZSH"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed zsh-completions zsh-syntax-highlighting zsh-autosuggestions --noconfirm"   
    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO BAT"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed bat --noconfirm"
    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO FZF"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed fzf --noconfirm"

    sleep 3
    clear
  ;;

  2)
    echo "Escritorio : Bspwm"

    sleep 3
    clear
    echo -e '\033[1;97m' "\n\t\t\t INSTALANDO COMPLEMENTO DE ZSH"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed zsh-completions zsh-syntax-highlighting zsh-autosuggestions --noconfirm"   
    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO FLAMESHOT"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed flameshot --noconfirm"
    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO XORG"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed xorg xorg-apps xorg-xinit xorg-twm xterm xorg-xclock --noconfirm"
#    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO NTFS-3G"
#    arch-chroot /mnt /bin/bash -c "pacman -S --needed ntfs-3g --noconfirm"
#    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO MURRINE"
#    arch-chroot /mnt /bin/bash -c "pacman -S --needed gtk-engine-murrine --noconfirm"
#    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO GNOME-THEMES-EXTRA"
#    arch-chroot /mnt /bin/bash -c "pacman -S --needed gnome-themes-extra --noconfirm"
    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO BAT"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed bat --noconfirm"
    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO FZF"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed fzf --noconfirm"
    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO TMUX"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed tmux --noconfirm"
    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO XCLIP"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed xclip  --noconfirm"
    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO FILE-ROLLER"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed file-roller --noconfirm"
#    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO CMUS"
#    arch-chroot /mnt /bin/bash -c "pacman -S --needed cmus --noconfirm"
#    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO MPV"
#    arch-chroot /mnt /bin/bash -c "pacman -S --needed mpv --noconfirm"
    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO LSD"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed lsd --noconfirm"
    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO ROFI"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed rofi --noconfirm"
    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO BSPWM"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed bspwm --noconfirm"
    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO SXHKD"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed sxhkd --noconfirm"
    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO GVFS"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed gvfs --noconfirm"
    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO PICOM"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed picom --noconfirm"
    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO PCMANFM"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed pcmanfm --noconfirm"
    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO BASH-COMPLETION"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed bash-completion  --noconfirm"
    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO LXAPPEARANCE"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed lxappearance --noconfirm"
    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO ZATHURA"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed zathura --noconfirm"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed zathura-pdf-poppler  --noconfirm"
    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO I3LOCK"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed  i3lock  --noconfirm"
    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO XED"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed xed  --noconfirm"
    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO FEH"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed feh  --noconfirm"
    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO PACMAN-CONTRIB"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed pacman-contrib --noconfirm"
    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO IMAGEMAGICK"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed  imagemagick --noconfirm"
    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO LIBNOTIFY"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed libnotify --noconfirm"
    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO DUNST"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed dunst --noconfirm"
    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO PULSEAUDIO"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed pulseaudio --noconfirm"
#    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO PAVUCONTROL"
#    arch-chroot /mnt /bin/bash -c "pacman -S --needed pavucontrol --noconfirm"
#    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO GALCULATOR"
#    arch-chroot /mnt /bin/bash -c "pacman -S --needed galculator --noconfirm"
#    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO DISCORD"
#    arch-chroot /mnt /bin/bash -c "pacman -S --needed discord --noconfirm"
#    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO ARC-GTK-THEME ARC-DARK"
#    arch-chroot /mnt /bin/bash -c "pacman -S --needed arc-gtk-theme --noconfirm"
#    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO RANGER"
#    arch-chroot /mnt /bin/bash -c "pacman -S --needed ranger --noconfirm"
#    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO ARK"
#    arch-chroot /mnt /bin/bash -c "pacman -S --needed ark --noconfirm"

  ;;

  3)
    echo "Escritorio : Xfce4"
     sleep 3

    # INSTALA XORG
	arch-chroot /mnt /bin/bash -c "pacman -S --needed xorg xorg-apps xorg-xinit xorg-twm xterm xorg-xclock --noconfirm"

    # PROGRAMAS DE XFCE4
    arch-chroot /mnt /bin/bash -c "pacman -S --needed xfce4 xfce4-goodies network-manager-applet ffmpegthumbs ffmpegthumbnailer --noconfirm"
	
	# PROGRAMAS PARA LOGIN
	arch-chroot /mnt /bin/bash -c "pacman -S --needed lightdm lightdm-gtk-greeter lightdm-gtk-greeter-settings light-locker accountsservice --noconfirm"
	arch-chroot /mnt /bin/bash -c "systemctl enable lightdm"

	# ESTABLECER FORMATO DE TECLADO DENTRO DE XORG
	keymap="es"

	touch /mnt/etc/X11/xorg.conf.d/00-keyboard.conf
	echo -e 'Section "InputClass"' > /mnt/etc/X11/xorg.conf.d/00-keyboard.conf
	echo -e 'Identifier "system-keyboard"' >> /mnt/etc/X11/xorg.conf.d/00-keyboard.conf
	echo -e 'MatchIsKeyboard "on"' >> /mnt/etc/X11/xorg.conf.d/00-keyboard.conf
	echo -e 'Option "XkbLayout" "latam"' >> /mnt/etc/X11/xorg.conf.d/00-keyboard.conf
	echo -e 'EndSection' >> /mnt/etc/X11/xorg.conf.d/00-keyboard.conf
	echo ""
	cat /mnt/etc/X11/xorg.conf.d/00-keyboard.conf
	sleep 5
	clear

	# FORMATOS DE LECTURA DE TODOS LOS TIPOS DE DISCOS INCLUIDO ANDROID
	#arch-chroot /mnt /bin/bash -c "pacman -S --needed android-file-transfer android-tools android-udev msmtp libmtp libcddb gvfs gvfs-afc gvfs-smb gvfs-gphoto2 gvfs-mtp gvfs-goa gvfs-nfs gvfs-google dosfstools jfsutils f2fs-tools btrfs-progs exfat-utils ntfs-3g reiserfsprogs udftools xfsprogs nilfs-utils polkit gpart mtools --noconfirm"

	# AUDIO
	arch-chroot /mnt /bin/bash -c "pacman -S --needed pulseaudio pavucontrol --noconfirm"
	clear

	# FONTS
	arch-chroot /mnt /bin/bash -c "pacman -S --needed gnu-free-fonts ttf-hack ttf-inconsolata gnome-font-viewer --noconfirm"
	clear

	# NAVEGADOR WEB
	arch-chroot /mnt /bin/bash -c "pacman -S --needed firefox --noconfirm"
	clear
  ;;

  4)
    echo "Escritorio : Kde Plasma"
    sleep 3

    # INSTALA XORG
	arch-chroot /mnt /bin/bash -c "pacman -S --needed xorg xorg-apps xorg-xinit xorg-twm xterm xorg-xclock --noconfirm"

    # PROGRAMAS PARA KDE PLASMA MINIMALISTA
    arch-chroot /mnt /bin/bash -c "pacman -S --needed plasma dolphin konsole discover sddm ffmpegthumbs ffmpegthumbnailer --noconfirm"
    arch-chroot /mnt /bin/bash -c "systemctl enable sddm"

    # ESTABLECER FORMATO DE TECLADO DENTRO DE XORG
	keymap="es"

	touch /mnt/etc/X11/xorg.conf.d/00-keyboard.conf
	echo -e 'Section "InputClass"' > /mnt/etc/X11/xorg.conf.d/00-keyboard.conf
	echo -e 'Identifier "system-keyboard"' >> /mnt/etc/X11/xorg.conf.d/00-keyboard.conf
	echo -e 'MatchIsKeyboard "on"' >> /mnt/etc/X11/xorg.conf.d/00-keyboard.conf
	echo -e 'Option "XkbLayout" "latam"' >> /mnt/etc/X11/xorg.conf.d/00-keyboard.conf
	echo -e 'EndSection' >> /mnt/etc/X11/xorg.conf.d/00-keyboard.conf
	echo ""
	cat /mnt/etc/X11/xorg.conf.d/00-keyboard.conf
	sleep 5
	clear

	# FORMATOS DE LECTURA DE TODOS LOS TIPOS DE DISCOS INCLUIDO ANDROID
	#arch-chroot /mnt /bin/bash -c "pacman -S --needed android-file-transfer android-tools android-udev msmtp libmtp libcddb gvfs gvfs-afc gvfs-smb gvfs-gphoto2 gvfs-mtp gvfs-goa gvfs-nfs gvfs-google dosfstools jfsutils f2fs-tools btrfs-progs exfat-utils ntfs-3g reiserfsprogs udftools xfsprogs nilfs-utils polkit gpart mtools --noconfirm"

	# AUDIO
	arch-chroot /mnt /bin/bash -c "pacman -S --needed pulseaudio pavucontrol --noconfirm"
	clear

	# FONTS
	arch-chroot /mnt /bin/bash -c "pacman -S --needed gnu-free-fonts ttf-hack ttf-inconsolata gnome-font-viewer --noconfirm"
	clear


	# NAVEGADOR WEB
	arch-chroot /mnt /bin/bash -c "pacman -S --needed firefox --noconfirm"
	clear
  ;;

  5)
    echo "Escritorio : Gnome 40"
    sleep 3

    # INSTALA XORG
	arch-chroot /mnt /bin/bash -c "pacman -S --needed xorg xorg-apps xorg-xinit xorg-twm xterm xorg-xclock --noconfirm"

    # PROGRAMAS PARA GNOME MINIMALISTA
    arch-chroot /mnt /bin/bash -c "pacman -S --needed gnome-shell gdm gnome-control-center gnome-tweaks gnome-terminal nautilus --noconfirm"
    arch-chroot /mnt /bin/bash -c "systemctl enable gdm"

    # ESTABLECER FORMATO DE TECLADO DENTRO DE XORG
	keymap="es"

	touch /mnt/etc/X11/xorg.conf.d/00-keyboard.conf
	echo -e 'Section "InputClass"' > /mnt/etc/X11/xorg.conf.d/00-keyboard.conf
	echo -e 'Identifier "system-keyboard"' >> /mnt/etc/X11/xorg.conf.d/00-keyboard.conf
	echo -e 'MatchIsKeyboard "on"' >> /mnt/etc/X11/xorg.conf.d/00-keyboard.conf
	echo -e 'Option "XkbLayout" "latam"' >> /mnt/etc/X11/xorg.conf.d/00-keyboard.conf
	echo -e 'EndSection' >> /mnt/etc/X11/xorg.conf.d/00-keyboard.conf
	echo ""
	cat /mnt/etc/X11/xorg.conf.d/00-keyboard.conf
	sleep 5
	clear

	# FORMATOS DE LECTURA DE TODOS LOS TIPOS DE DISCOS INCLUIDO ANDROID
	#arch-chroot /mnt /bin/bash -c "pacman -S --needed android-file-transfer android-tools android-udev msmtp libmtp libcddb gvfs gvfs-afc gvfs-smb gvfs-gphoto2 gvfs-mtp gvfs-goa gvfs-nfs gvfs-google dosfstools jfsutils f2fs-tools btrfs-progs exfat-utils ntfs-3g reiserfsprogs udftools xfsprogs nilfs-utils polkit gpart mtools --noconfirm"

	# AUDIO
	arch-chroot /mnt /bin/bash -c "pacman -S --needed pulseaudio pavucontrol --noconfirm"
	clear

	# FONTS
	arch-chroot /mnt /bin/bash -c "pacman -S --needed gnu-free-fonts ttf-hack ttf-inconsolata gnome-font-viewer --noconfirm"
	clear

	# NAVEGADOR WEB
	arch-chroot /mnt /bin/bash -c "pacman -S --needed firefox --noconfirm"
	clear
  ;;
 
  6)
    echo -e '\033[0;34m' "Escritorio : I3"
    sleep 3
    echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO i3-WM I3GAPS I3BLOCKS"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed i3-gaps i3-wm i3blocks i3lock --noconfirm"
    echo -e '\033[0;34m' "\n\t\t\t INSTALANDO COMPLEMENTO DE ZSH"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed zsh-completions zsh-syntax-highlighting zsh-autosuggestions --noconfirm"
    echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO FLAMESHOT"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed flameshot --noconfirm"
    echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO XORG"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed xorg xorg-apps xorg-xinit xorg-twm xterm xorg-xclock --noconfirm"
    echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO NTFS-3G"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed ntfs-3g --noconfirm"
    echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO MURRINE"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed gtk-engine-murrine --noconfirm"
    echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO GNOME-THEMES-EXTRA"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed gnome-themes-extra --noconfirm"
    echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO BAT"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed bat --noconfirm"
    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO FILE-ROLLER"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed file-roller --noconfirm"
    echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO FZF"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed fzf --noconfirm"
    echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO TMUX"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed tmux --noconfirm"
    echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO XCLIP"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed xclip  --noconfirm"
#    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO CMUS"
#    arch-chroot /mnt /bin/bash -c "pacman -S --needed cmus --noconfirm"
#    echo -e '\033[1;97m' "\n\t\t\t\t  INSTALANDO MPV"
#    arch-chroot /mnt /bin/bash -c "pacman -S --needed mpv --noconfirm"
    echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO LSD"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed lsd --noconfirm"
    echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO ROFI"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed rofi --noconfirm"
    echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO BSPWM"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed bspwm --noconfirm"
    echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO SXHKD"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed sxhkd --noconfirm"
    echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO GVFS"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed gvfs --noconfirm"
    echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO PICOM"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed picom --noconfirm"
    echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO PCMANFM"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed pcmanfm --noconfirm"
    echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO BASH-COMPLETION"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed bash-completion  --noconfirm"
    echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO LXAPPEARANCE"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed lxappearance --noconfirm"
    echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO ZATHURA"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed zathura --noconfirm"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed zathura-pdf-poppler  --noconfirm"
    echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO I3LOCK"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed  i3lock  --noconfirm"
    echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO XED"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed xed  --noconfirm"
    echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO FEH"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed feh  --noconfirm"
    echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO PACMAN-CONTRIB"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed pacman-contrib --noconfirm"
    echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO IMAGEMAGICK"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed  imagemagick --noconfirm"
    echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO LIBNOTIFY"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed libnotify --noconfirm"
    echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO DUNST"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed dunst --noconfirm"
    echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO PULSEAUDIO"
    arch-chroot /mnt /bin/bash -c "pacman -S --needed pulseaudio --noconfirm"
#   echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO ARK"
#   arch-chroot /mnt /bin/bash -c "pacman -S --needed ark --noconfirm"
#   echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO KITTY"
#   arch-chroot /mnt /bin/bash -c "pacman -S --needed kitty --noconfirm"
#   echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO RANGER"
#   arch-chroot /mnt /bin/bash -c "pacman -S --needed ranger --noconfirm"
#   echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO DISCORD"
#   arch-chroot /mnt /bin/bash -c "pacman -S --needed discord --noconfirm"
#   echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO ARC-GTK-THEME(ARC-DARK)"
#   arch-chroot /mnt /bin/bash -c "pacman -S --needed arc-gtk-theme --noconfirm"
#   echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO TELEGRAM"
#   arch-chroot /mnt /bin/bash -c "pacman -S --needed telegram-desktop -y --noconfirm
#   echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO TILIX"
#   arch-chroot /mnt /bin/bash -c "pacman -S --needed tilix --noconfirm"
#   echo -e '\033[0;34m' "\n\t\t\t\t  INSTALANDO XDG-USER-DIRS"
#   arch-chroot /mnt /bin/bash -c "pacman -S --needed xdg-user-dirs --noconfirm"
#   arch-chroot /mnt /bin/bash -c  "xdg-user-dirs-update"
    clear

  ;;
 
  *)
    echo "¡Incorrecto! por defecto se instalará Terminal Virtual (TTY)"
  ;;
esac


echo -e '\033[1;95m' "\n\t\t\t CLONANDO REPO EN HOME DEL DISCO"
arch-chroot /mnt /bin/bash -c "git clone https://github.com/zafnet/wmarch /home/$user/wmarch"
sleep 2
clear

echo -e '\033[1;95m' "\n\t\t\t CAMBIANDO PERMISOS PARA REPO EN HOME DEL DISCO"
arch-chroot /mnt /bin/bash -c "chown -R $user:users /home/$user/wmarch/"
sleep 2
clear

echo -e '\033[1;95m' "\n\t\t\t CAMBIANDO PERMISOS PARA DOTS EN DISCO"
arch-chroot /mnt /bin/bash -c "chmod 744 /home/$user/wmarch/dots"
sleep 2
clear

#echo -e '\033[1;95m' "\n\t\t\t LANZANDO DOTS EN DISCO"
#arch-chroot /mnt /bin/bash -c "bash -c /home/$user/wmarch/dots"
#sleep 2
#clear

echo -e '\033[1;95m' "\n\t\t\t DESMONTANDO PARTICIONES"
umount -R /mnt
sleep 2
clear

#echo -e '\033[1;95m' "\n\t\t\t REINICIANDO EL SISTEMA"
#reboot
